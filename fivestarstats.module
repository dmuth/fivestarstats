<?php
/**
* Fivestar Stats module.  This is used for determining voting statistics,
* as well as looking for abuse of the voting system.
*
* @author Douglas Muth <http://www.dmuth.org/>
*/

/**
* Create our menu.
*/
function fivestarstats_menu() {

	$retval = array();

	//
	// Our main menu item.
	//
	$retval["admin/settings/fivestarstats"] = array(
		"title" => "Fivestar Stats",
		"page callback" => "fivestarstats_main",
		"access arguments" => array("administer site configuration"),
		"type" => MENU_NORMAL_ITEM,
		
		);

	return($retval);

} // End of fivestarstats_menu()


/**
* Our permissions function.
* For now, we'll leave this empty.
*/
function fivestarstats_perm() {
	$retval = array();
	return($retval);
}


/**
* Our main function.  It returns the various reports.
*
* @return string The content of the page
*/
function fivestarstats_main() {

	$retval = "";
	$data = array();

	//$data["total"] = fivestarstats_get_total_stats();

	$num = 10;
	//$data["users"] = fivestarstats_get_user_stats($num);

	$data["ips"] = fivestarstats_get_ips($num);

	//$retval .= t("<b>Total Votes:</b> %num_votes from %num_ips unique IPs "
	//	. "with average of %num_stars stars.",
	//	array("%num_votes" => $num_votes, "%num_ips" => $num_ips, 
	//		"%num_stars" => $average_stars));

		//$retval .= "<li>" . l($row["name"], "user/" . $row["uid"]) . ": " 
		//	. t("%num posts", array("%num" => $row["cnt"]))
		//	. "</li>";

	//$retval .= "<h2>Top Posters (nodes and comments)</h2>";
	//$retval .= "<ul>";
	//$retval .= "</ul>";

$retval .= "<pre>" . print_r($data, true) . "</pre>";

/*
Tables:
mysql> desc votingapi_vote;
+--------------+------------------+------+-----+---------+----------------+
| Field        | Type             | Null | Key | Default | Extra          |
+--------------+------------------+------+-----+---------+----------------+
| vote_id      | int(11)          | NO   | PRI | NULL    | auto_increment |
| content_type | varchar(20)      | YES  | MUL | NULL    |                |
| content_id   | int(10) unsigned | YES  |     | NULL    |                |
| value        | float            | YES  |     | NULL    |                |
| value_type   | varchar(20)      | NO   |     | NULL    |                |
| tag          | varchar(128)     | YES  |     | vote    |                |
| uid          | int(10) unsigned | YES  |     | 0       |                |
| timestamp    | int(11)          | YES  |     | NULL    |                |
| vote_source  | varchar(255)     | YES  |     | NULL    |                |
+--------------+------------------+------+-----+---------+----------------+


TODO:

Posts:
X Highest posters
X Vote average for each poster
X number/percentage of 1-star votes for each poster

IPs:
X Most active IPs
X Number/percentage of 1-star votes per IP
X Highest number of 1-star votes

Users:
- Top-rated users
- Lowest rated users
- Users with most 1-star votes (for abuse purposes)

*/

	return($retval);

} // End of fivestarstats_main()


/**
* Get total statistics.
*
* @return array An associative array of data.
*/
function fivestarstats_get_total_stats() {

	//
	// How many votes cast?
	//
	$retval = array();
	$query = "SELECT COUNT(*) AS cnt FROM votingapi_vote WHERE value_type='percent'";
	$cursor = db_query($query);
	$row = db_fetch_array($cursor);
	$retval["num_votes"] = $row["cnt"];
	
	//
	// How many unique IPs voted?
	//
	$query = "SELECT COUNT(*) AS cnt FROM ("
		. "SELECT DISTINCT vote_source FROM votingapi_vote "
			. "WHERE value_type='perent') AS tbl1";
	$cursor = db_query($query);
	$row = db_fetch_array($cursor);
	$retval["num_ips"] = $row["cnt"];

	//
	// What's the average vote value in stars?
	//
	$query = "SELECT AVG(value) AS average FROM votingapi_vote "
		. "WHERE value_type='percent'";
	$cursor = db_query($query);
	$row = db_fetch_array($cursor);
	$average = $row["average"];
	$retval["average_stars"] = sprintf("%.2f", $average / 20);

	return($retval);

} // End of fivestarstats_get_total_stats()


/**
* Get statistics on users.
*
* @param integer $num_users The number of "top" users to query.
*
* @return array Associative array of data where the key is the user ID.
*/
function fivestarstats_get_user_stats($num_users) {

	$retval = array();

	//
	// Get top posters. Both nodes AND comments.
	//
	$query = "SELECT tbl1.uid, sum(cnt) AS cnt, users.name FROM "
		. "(SELECT uid, count(*) AS cnt FROM comments GROUP BY uid "
			. "UNION SELECT uid, count(*) AS cnt FROM node GROUP BY uid)"
			. " tbl1 "
		. "JOIN users ON tbl1.uid = users.uid GROUP BY uid ORDER BY cnt DESC "
		. "LIMIT $num_users"
		;
	$cursor = db_query($query);
	
	while ($row = db_fetch_array($cursor)) {

		$uid = $row["uid"];
		$user = array();
		$user["num_posts"] = $row["cnt"];
		$user["name"] = $row["name"];

		$retval[$uid] = $user;

	}

	foreach ($retval as $key => $value) {

		$uid = $key;

		//
		// Get average rating for each user's posts and comments.
		//
		$query = ""
			. "SELECT SUM(cnt) AS cnt, SUM(total) AS total FROM "
			. "("
			. "SELECT COUNT(*) AS cnt, SUM(value) AS total FROM votingapi_vote "
			. "WHERE "
			. "value_type='percent' "
			. "AND content_type='node' AND content_id IN "
				. "(SELECT nid FROM node WHERE uid=%d) "
			. "UNION "
			. "SELECT COUNT(*) AS cnt, SUM(value) AS total FROM votingapi_vote "
			. "WHERE "
			. "value_type='percent' "
			. "AND content_type='comment' AND content_id IN "
				. "(SELECT cid FROM comments WHERE uid=%d) "
			. ") tbl1 "
			;
		$query_args = array($uid, $uid);
		$cursor = db_query($query, $query_args);
		$row = db_fetch_array($cursor);

		$retval[$uid]["num_votes"] = $row["cnt"];
		$retval[$uid]["total"] = $row["total"];
		$retval[$uid]["average"] = $row["total"] / $row["cnt"] / 20;

		//
		// Get a breakdown of ratings for each user.
		//
		$query = ""
			. "SELECT value /20 AS stars, sum(cnt) AS cnt FROM "
			. "("
			. "SELECT 'node' AS type, value, COUNT(*) AS cnt "
			. "FROM votingapi_vote "
			. "WHERE "
			. "value_type='percent' "
			. "AND content_type='node' AND content_id IN "
				. "(SELECT nid FROM node WHERE uid=%d) "
			. "GROUP BY value "
			. "UNION "
			. "SELECT 'comment' AS type, value, COUNT(*) AS cnt "
			. "FROM votingapi_vote "
			. "WHERE "
			. "value_type='percent' "
			. "AND content_type='comment' AND content_id IN "
				. "(SELECT cid FROM comments WHERE uid=%d) "
			. "GROUP BY value "
			. ") tbl1 "
			. "GROUP BY value "
			;
		$query_args = array($uid, $uid);
		$cursor = db_query($query, $query_args);
		$retval[$uid]["num_stars"] = array();
		while ($row = db_fetch_array($cursor)) {
			$num_stars = $row["stars"];
			$retval[$uid]["num_stars"][$num_stars] = $row["cnt"];
		}

	}

	return($retval);

} // End of fivestarstats_get_user_stats()


/**
* Get statistics for most active IPs, and the most number of 1-star votes
*	per IP, to find possible abuse.
*
* @param integer $num The number of top IPs to retrieve.
*
* @return array An associative array of IP information.
*/
function fivestarstats_get_ips($num) {

	$retval = array();

	$retval["top_voters"] = fivestarstats_get_ips_top_voters($num);
	$retval["top_1_star_voters"] = fivestarstats_get_ips_top_1_star_voters($num);
	$retval["lowest_vote_average"] = fivestarstats_get_ips_lowest_vote_average($num);

	return($retval);

} // End of fivestarstats_get_ips()


/**
* Get the top voting IPs.
*
* @param integer $num The number of top IPs to retrieve.
*
* @return array An associative array of IP information.
*/
function fivestarstats_get_ips_top_voters($num) {

	$retval = array();

	$query = "SELECT vote_source, COUNT(*) AS cnt "
		. "FROM "
		. "votingapi_vote "
		. "WHERE "
		. "value_type='percent' "
		. "GROUP BY vote_source "
		. "ORDER BY cnt DESC "
		. "LIMIT $num "
		;
	$cursor = db_query($query);
	while ($row = db_fetch_array($cursor)) {
		$ip = $row["vote_source"];
		$retval[$ip] = $row["cnt"];
	}

	return($retval);

} // End of fivestarstats_get_ips_top_voters()


/**
* Now fetch the top 1-star voters.
* This may or may not pick up abuse. For example, on anthrocon.org, *I*
* am the top 1-star voter, because we really haven't had any 
* "repeat 1-star voters".
*
* @param integer $num The number of top IPs to retrieve.
*
* @return array An associative array of IP information.
*/
function fivestarstats_get_ips_top_1_star_voters($num) {

	$retval = array();

	$query = "SELECT vote_source, COUNT(*) AS cnt "
		. "FROM "
		. "votingapi_vote "
		. "WHERE "
		. "value_type='percent' "
		. "AND value=20 "
		. "GROUP BY vote_source "
		. "ORDER BY cnt DESC "
		. "LIMIT $num "
		;
	$cursor = db_query($query);
	while ($row = db_fetch_array($cursor)) {
		$ip = $row["vote_source"];
		$retval[$ip] = $row["cnt"];
	}

	return($retval);

} // End of fivestarstats_get_ips_top_1_star_voters()


/**
*
* Now determine which IPs have the lowest voting average.
* This is useful to find IPs that have only given low votes.
*
* @param integer $num The number of top IPs to retrieve.
*
* @return array An associative array of IP information.
*/
function fivestarstats_get_ips_lowest_vote_average($num) {

	$retval = array();

	$query = "SELECT vote_source, COUNT(value) AS cnt, "
		. "SUM(value) AS sum, AVG(value) AS avg "
		. "FROM "
		. "votingapi_vote "
		. "WHERE "
		. "value_type='percent' "
		. "GROUP BY vote_source "
		//
		// Right now, we're hard coding in a minimum of 10 votes. 
		// I'll probably change this later.
		//
		. "HAVING cnt >=10 "
		. "ORDER BY avg ASC, cnt DESC "
		. "LIMIT $num "
		;
	$cursor = db_query($query);
	while ($row = db_fetch_array($cursor)) {
		$ip = $row["vote_source"];
		$retval[$ip] = array(
			"cnt" => $row["cnt"],
			"avg1" => $row["avg"] / 20,
			);
	}

	return($retval);
		
} // End of fivestarstats_get_ips_lowest_vote_average()

